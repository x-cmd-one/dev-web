import{_ as l,D as t,o as p,c as n,G as s,R as a}from"./chunks/framework.c8605957.js";const v=JSON.parse('{"title":"x gh pr","description":"","frontmatter":{},"headers":[],"relativePath":"git/gh/pr.md","filePath":"git/gh/pr.md"}'),r={name:"git/gh/pr.md"},c=a("",14),d=a("",18),i=a("",7),y=a("",7),h=a("",5);function E(u,g,F,m,C,b){const e=t("DocsGroupTable"),o=t("FooterAds");return p(),n("div",null,[c,s(e,{header:'["Name, Shorthand","Default","Description"]',group:'{"Required":{"active":true,"data":[{"name":"`--repo`, `-r` <owner/repo>","default":"","desc":"<owner_path>/<repo_path>"}]},"Optional":{"active":true,"data":[{"name":"`--base` <branch>","default":"","desc":"Filter pulls by base branch name"},{"name":"`--head` <ref>","default":"","desc":"Filter pulls by base branch name"},{"name":"`--state` <state>","default":"`\\"open\\"` ","desc":"Filter pulls by state"},{"name":"`--sort` <way>","default":"`\\"created\\"` ","desc":"Sort pull requests"},{"name":"`--direction` <direction>","default":"`\\"desc\\"` ","desc":"Sort pull requests"},{"name":"`--page` <num>","default":"`\\"1\\"` ","desc":"target page"},{"name":"`--per_page` <num>","default":"`\\"30\\"` ","desc":"per_page data number"}]},"$NotGroup":{"active":true,"data":[]}}'}),d,s(e,{header:'["Name, Shorthand","Default","Description"]',group:'{"Required":{"active":true,"data":[{"name":"`--repo`, `-r` <owner/repo>","default":"","desc":"<owner_path>/<repo_path>"},{"name":"`--title` <title>","default":"","desc":"pull request title"},{"name":"`--head` <branch>","default":"","desc":"source branch"},{"name":"`--base` <branch>","default":"","desc":"target branch"}]},"Optional":{"active":true,"data":[{"name":"`--body` <content>","default":"","desc":"pull request content"},{"name":"`--issue` <issue>","default":"","desc":"association issue"}]},"$NotGroup":{"active":true,"data":[]}}'}),i,s(e,{header:'["Name, Shorthand","Default","Description"]',group:'{"Required":{"active":true,"data":[{"name":"`--repo`, `-r` <owner/repo>","default":"","desc":"<owner_path>/<repo_path>"},{"name":"`--state` <open,closed>","default":"","desc":"pr state"}]},"Optional":{"active":true,"data":[{"name":"`--title` <title>","default":"","desc":"pull request title"},{"name":"`--base` <branch>","default":"","desc":"target branch"},{"name":"`--body` <content>","default":"","desc":"pull request content"}]},"$NotGroup":{"active":true,"data":[]}}'}),y,s(e,{header:'["Name, Shorthand","Default","Description"]',group:'{"Required":{"active":true,"data":[{"name":"`--repo`, `-r` <owner/repo>","default":"","desc":"<owner_path>/<repo_path>"}]},"Optional":{"active":true,"data":[{"name":"`--merge_method` <merge_method>","default":"`\\"merge\\"` ","desc":"merge method"},{"name":"`--commit_title` <title>","default":"","desc":"Title for the automatic commit message"},{"name":"`--commit_message` <body>","default":"","desc":"Extra detail to append to automatic commit message"}]},"$NotGroup":{"active":true,"data":[]}}'}),h,s(o),s(o)])}const x=l(r,[["render",E]]);export{v as __pageData,x as default};
